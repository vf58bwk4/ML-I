MCSKIP ; WITH ; NL
MCINS %.
MCSKIP MT,<>
MCSKIP + WITHS NL
MCSET S18=2
;;
;; Dec -> Dec, Dec -> Hex and Hex -> Dec table
MCDEF MCDH WITHS ( ) AS <+
MCDEF <_> AS %A1.
MCGO L9 IF _ = 0
MCGO L9 IF _ = 1
MCGO L9 IF _ = 2
MCGO L9 IF _ = 3
MCGO L9 IF _ = 4
MCGO L9 IF _ = 5
MCGO L9 IF _ = 6
MCGO L9 IF _ = 7
MCGO L9 IF _ = 8
MCGO L9 IF _ = 9
MCGO L10 IF _ = 10
MCGO L11 IF _ = 11
MCGO L12 IF _ = 12
MCGO L13 IF _ = 13
MCGO L14 IF _ = 14
MCGO L15 IF _ = 15
MCGO L20 IF _ = A
MCGO L21 IF _ = B
MCGO L22 IF _ = C
MCGO L23 IF _ = D
MCGO L24 IF _ = E
MCGO L25 IF _ = F
MCGO L0
%L10.A<>MCGO L0
%L11.B<>MCGO L0
%L12.C<>MCGO L0
%L13.D<>MCGO L0
%L14.E<>MCGO L0
%L15.F<>MCGO L0
%L20.10<>MCGO L0
%L21.11<>MCGO L0
%L22.12<>MCGO L0
%L23.13<>MCGO L0
%L24.14<>MCGO L0
%L25.15<>MCGO L0
%L9.%A1.>
;; Dec -> Dec table
MCDEF TBDH WITHS ( WITHS 0  WITHS ) AS 0
MCDEF TBDH WITHS ( WITHS 1  WITHS ) AS 1
MCDEF TBDH WITHS ( WITHS 2  WITHS ) AS 2
MCDEF TBDH WITHS ( WITHS 3  WITHS ) AS 3
MCDEF TBDH WITHS ( WITHS 4  WITHS ) AS 4
MCDEF TBDH WITHS ( WITHS 5  WITHS ) AS 5
MCDEF TBDH WITHS ( WITHS 6  WITHS ) AS 6
MCDEF TBDH WITHS ( WITHS 7  WITHS ) AS 7
MCDEF TBDH WITHS ( WITHS 8  WITHS ) AS 8
MCDEF TBDH WITHS ( WITHS 9  WITHS ) AS 9
;; Dec -> Hex table
MCDEF TBDH WITHS ( WITHS 10 WITHS ) AS A
MCDEF TBDH WITHS ( WITHS 11 WITHS ) AS B
MCDEF TBDH WITHS ( WITHS 12 WITHS ) AS C
MCDEF TBDH WITHS ( WITHS 13 WITHS ) AS D
MCDEF TBDH WITHS ( WITHS 14 WITHS ) AS E
MCDEF TBDH WITHS ( WITHS 15 WITHS ) AS F
;; Hex -> Dec table
MCDEF TBDH WITHS ( WITHS A WITHS ) AS 10
MCDEF TBDH WITHS ( WITHS B WITHS ) AS 11
MCDEF TBDH WITHS ( WITHS C WITHS ) AS 12
MCDEF TBDH WITHS ( WITHS D WITHS ) AS 13
MCDEF TBDH WITHS ( WITHS E WITHS ) AS 14
MCDEF TBDH WITHS ( WITHS F WITHS ) AS 15
;; Reverse argument
MCDEF RVRS WITHS () AS <+
MCSET T1 = MCLENG(%A1.)
%L1.MCGO L0 IF T1 EN 0
MCSUB(%A1.,%T1.,%T1.)+
MCSET T1 = T1 - 1
MCGO L1
>
;; DTOH
MCDEF DTOH WITH ^ WITHS () AS <+
MCSET T1 = %A1.
%L1.MCGO L2 IF T1 GR 0
MCGO L0
%L2.+
MCSET T3 = T1 / 16
MCSET T2 = T1 - T3 * 16
MCSET T1 = T3
MCDEF <_> AS TBDH(%T2.)
_+
MCGO L1
>
MCDEF DTOH WITHS () AS <+
;; "Expantion" of access to table is going on during this MCDEF
MCDEF <_> AS DTOH^(%A1.)
RVRS(_)>
;; DTOH recursive
MCDEF DTOHREC WITHS () AS <+
MCSET T1 = %A1.
MCGO L2 IF T1 GR 0
MCGO L0
%L2.+
MCSET T3 = T1 / 16
DTOHREC(%T3.)+
MCDEF <_> AS TBDH(%T1-T3*16.)
_>
;; HTOD
MCDEF HTOD WITHS () AS <+
MCDEF <_> AS %A1.
MCSET T1 = 1
MCSET T2 = MCLENG(_)
MCSET T3 = 0
%L1.MCGO L10 IF T1 GR T2
;; The access to table has no arguments, only delimiters, so we can "expand" them only via redefining
MCDEF <$> AS TBDH(MCSUB(_,%T1.,%T1.))
MCSET T3 = T3*16 + $
MCSET T1 = T1 + 1
MCGO L1
%L10.+
%T3.>
;; Test
<HTOD(AA)>: HTOD(AA)
<DTOH(170)>: DTOH(170)

<HTOD(DTOH(123))>: HTOD(DTOH(123))
<DTOH(HTOD(FE2))>: DTOH(HTOD(FE2))
--
<DTOHREC(170)>: DTOHREC(170)

<HTOD(DTOHREC(123))>: HTOD(DTOHREC(123))
<DTOHREC(HTOD(FE2))>: DTOHREC(HTOD(FE2))
