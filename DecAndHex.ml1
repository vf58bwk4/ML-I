MCSKIP ; WITH ; NL
MCINS %.
MCSKIP MT,<>
MCSKIP + WITHS NL
MCSET S18=2
;;
;; Reverse argument
MCDEF RVRS WITHS () AS <+
MCSET T1 = MCLENG(%A1.)
%L1.MCGO L0 IF T1 EN 0
MCSUB(%A1.,%T1.,%T1.)+
MCSET T1 = T1 - 1
MCGO L1
>
;; Define one access to different tables
MCDEF TBDTOH AS [
MCDEF TBHTOD AS [
;; Dec -> Dec table
MCDEF TBDTOH WITH 0  AS 0
MCDEF TBDTOH WITH 1  AS 1
MCDEF TBDTOH WITH 2  AS 2
MCDEF TBDTOH WITH 3  AS 3
MCDEF TBDTOH WITH 4  AS 4
MCDEF TBDTOH WITH 5  AS 5
MCDEF TBDTOH WITH 6  AS 6
MCDEF TBDTOH WITH 7  AS 7
MCDEF TBDTOH WITH 8  AS 8
MCDEF TBDTOH WITH 9  AS 9
;; Dec -> Hex table
MCDEF TBDTOH WITH 10 AS A
MCDEF TBDTOH WITH 11 AS B
MCDEF TBDTOH WITH 12 AS C
MCDEF TBDTOH WITH 13 AS D
MCDEF TBDTOH WITH 14 AS E
MCDEF TBDTOH WITH 15 AS F
;; Hex -> Dec table
MCDEF TBHTOD WITH A AS 10
MCDEF TBHTOD WITH B AS 11
MCDEF TBHTOD WITH C AS 12
MCDEF TBHTOD WITH D AS 13
MCDEF TBHTOD WITH E AS 14
MCDEF TBHTOD WITH F AS 15
;; DTOH
MCDEF DTOH WITH ^ WITHS () AS <+
MCSET T1 = %A1.
%L1.MCGO L2 IF T1 GR 0
MCGO L0
%L2.+
MCSET T3 = T1 / 16
MCSET T2 = T1 - T3 * 16
MCSET T1 = T3
MCDEF <_> AS [%T2.
_+
MCGO L1
>
MCDEF DTOH WITHS () AS <+
;; "Expantion" of access to table is going on during this MCDEF
MCDEF <_> AS DTOH^(%A1.)
RVRS(_)>
;; DTOH recursive
MCDEF DTOHREC WITHS () AS <+
MCSET T1 = %A1.
MCGO L2 IF T1 GR 0
MCGO L0
%L2.+
MCSET T3 = T1 / 16
DTOHREC(%T3.)+
MCDEF <_> AS [%T1-T3*16.
_>
;; HTOD
MCDEF HTOD WITHS () AS <+
MCSET T1 = 1
MCSET T2 = MCLENG(%A1.)
MCSET T3 = 0
%L11.+
MCGO L10 IF T1 GR T2
;; The access to table has no arguments, only delimiters, so we can "expand" them only via redefining
MCDEF <_> AS [MCSUB(%A1.,%T1.,%T1.)
MCSET T3 = T3*16 + _
MCSET T1 = T1 + 1
MCGO L11
%L10.+
%T3.>
;; Test
<HTOD(AA)>: HTOD(AA)
<DTOH(170)>: DTOH(170)

<HTOD(DTOH(123))>: HTOD(DTOH(123))
<DTOH(HTOD(FE2))>: DTOH(HTOD(FE2))
--
<DTOHREC(170)>: DTOHREC(170)

<HTOD(DTOHREC(123))>: HTOD(DTOHREC(123))
<DTOHREC(HTOD(FE2))>: DTOHREC(HTOD(FE2))
